{"version":3,"sources":["captcha.ts","form.ts","index.ts"],"names":[],"mappings":";;;AACA,aAAA,SAAgB,EAAiB,GAC3B,IAAC,EACG,MAAA,IAAI,MAAM,oCAGX,OAAA,IAAI,QAAQ,SAAC,EAAS,GAC3B,WAAW,MAAM,WACf,WACG,QAAQ,2CAA4C,CAAE,OAAM,IAC5D,KAAK,OATd,QAAA,YAAA,EAAA,QAAA,iBAAA;;AC6GC,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,SAAA,GAAA,EAAA,EAAA,SAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,MAAA,KAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,QAAA,YAAA,EA9GD,IAAA,EAAA,QAAA,aAEA,SAAsB,EAAa,GA4GlC,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAzGK,GAFJ,EAAE,iBAEwB,YAAtB,EAAa,KACf,MAAA,CAAA,GAwGH,EAAA,MAAA,EAAA,KAAA,EAnGG,OAmGH,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IApGG,EAAS,CAAE,KAAM,YACjB,CAAA,EAAM,EAAS,EAAE,SAmGpB,KAAA,EAAA,OAnGG,EAAA,OACA,EAAS,CAAE,KAAM,YAkGpB,CAAA,EAAA,GAAA,KAAA,EAAA,OAhGG,EAAS,CAAE,KAAM,QAAS,MAgG7B,EAAA,EAAA,SA/FG,QAAQ,MAAM,GA+FjB,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA,QA3FD,SAAe,EAAS,GA2FvB,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAxFgB,OAFT,EAAO,EAAO,cAAc,SAAS,MACrC,EAAO,EAAO,cAAc,SAAS,MAC5B,CAAA,EAAM,EAAA,iBAAiB,YAwFvC,KAAA,EAtFC,OAFM,EAAS,EAAA,OAEf,CAAA,EAAO,MAAM,2DAA4D,CACvE,OAAQ,OACR,QAAS,CACS,eAAA,oBAElB,KAAM,KAAK,UAAU,CAAE,KAAI,EAAE,KAAI,EAA0B,uBAAA,MAE1D,KAAK,SAAA,GAAO,OAAA,EAAI,SAChB,KAAK,SAAA,GACA,GAAA,EAAI,MACA,MAAA,IAAI,MAAM,EAAI,eAK5B,SAAS,EACP,EACA,GAEI,QAFJ,IAAA,IAAA,EAAA,IAEM,YAAa,SAAS,cAAc,YAAtC,CAKE,IAAA,EAAW,SAAS,cACxB,GAGK,OADP,EAAS,QAAQ,cAAc,QAAQ,YAAc,EAC9C,SAAS,WAAW,EAAS,SAAS,GARvC,IAAA,MAAM,iDA1Cd,QAAA,aAAA,EA4DA,IAAI,EAA8B,CAChC,KAAM,WAGF,EAAc,SAAS,cAAc,oBACrC,EAAmB,SAAS,cAAc,uBAC1C,EAAe,SAAS,cAC5B,yBAGF,SAAS,EAAS,GAChB,EAAe,EACf,EAAiB,UAAY,GAEzB,IACM,OAAA,EAAS,MACV,IAAA,UACH,EAAa,UAAW,EACxB,MACG,IAAA,UAQI,OAPP,EAAa,UAAW,EACxB,EAAiB,YACf,EACE,2BACA,0BAGG,UACJ,IAAA,UASI,OARP,EAAa,UAAW,EAExB,EAAiB,YACf,EACE,4BACA,mCAGG,UACJ,IAAA,QAKI,OAJP,EAAa,UAAW,EACxB,EAAiB,YACf,EAAsB,oBAAqB,EAAS,MAAM,UAErD,SAEX,MAAO,GACP,QAAQ,MAAM;;AClGlB,aAAA,QAAA,YAAA,EAVA,QAAA,sBACA,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,UAEI,OAAM,KACR,OAAM,IAAQ,QAAQ,cAGxB,EAAA,iBAAiB,kBAEjB,OAAM,aAAmB,EAAA","file":"src.50b84f7d.map","sourceRoot":"../src","sourcesContent":["declare var grecaptcha: any\nexport function executeRecaptcha(action: string): Promise<string> {\n  if (!action) {\n    throw new Error('No action provided for reCaptcha')\n  }\n\n  return new Promise((resolve, reject) => {\n    grecaptcha.ready(() => {\n      grecaptcha\n        .execute('6Lf4t5cUAAAAAAXobYFKKYSQ0MHYIrvaHD1ISGEL', { action })\n        .then(resolve)\n    })\n  })\n}\n","import { executeRecaptcha } from './captcha'\n\nexport async function handleSubmit(e: Event) {\n  e.preventDefault()\n\n  if (currentState.step === 'pending') {\n    return\n  }\n\n  try {\n    setState({ step: 'pending' })\n    await sendMail(e.target)\n    setState({ step: 'success' })\n  } catch (error) {\n    setState({ step: 'error', error })\n    console.error(error)\n  }\n}\n\nasync function sendMail(target) {\n  const from = target.querySelector('#from').value\n  const text = target.querySelector('#text').value\n  const rToken = await executeRecaptcha('contact')\n\n  return fetch('https://us-central1-suomidev.cloudfunctions.net/sendMail', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ from, text, 'g-recaptcha-response': rToken })\n  })\n    .then(res => res.json())\n    .then(res => {\n      if (res.error) {\n        throw new Error(res.error)\n      }\n    })\n}\n\nfunction createFlashElFragment(\n  templateQuerySelector: string,\n  message: string = ''\n) {\n  if (!('content' in document.createElement('template'))) {\n    new Error('Browser does not support HTMLTemplateElement.')\n    return\n  }\n\n  const template = document.querySelector(\n    templateQuerySelector\n  ) as HTMLTemplateElement\n  template.content.querySelector('span').textContent = message\n  return document.importNode(template.content, true)\n}\n\ntype Step = 'initial' | 'pending' | 'success' | 'error'\n\ninterface ICurrentState {\n  step: Step\n  error?: Error\n}\n\nlet currentState: ICurrentState = {\n  step: 'initial'\n}\n\nconst formElement = document.querySelector('form#contactForm')\nconst formStateElement = document.querySelector('.form-state-wrapper')\nconst submitButton = document.querySelector(\n  'button[type=\"submit\"]'\n) as HTMLButtonElement\n\nfunction setState(newState: ICurrentState) {\n  currentState = newState\n  formStateElement.innerHTML = ''\n\n  try {\n    switch (newState.step) {\n      case 'initial':\n        submitButton.disabled = false\n        break\n      case 'pending':\n        submitButton.disabled = true\n        formStateElement.appendChild(\n          createFlashElFragment(\n            'template.t-pending-flash',\n            'Lähetetään viestiä...'\n          )\n        )\n        return 'pending'\n      case 'success':\n        submitButton.disabled = true\n\n        formStateElement.appendChild(\n          createFlashElFragment(\n            'template.t-response-flash',\n            'Kiitos! Viestisi on lähetetty.'\n          )\n        )\n        return 'success'\n      case 'error':\n        submitButton.disabled = false\n        formStateElement.appendChild(\n          createFlashElFragment('.t-response-flash', newState.error.message)\n        )\n        return 'error'\n    }\n  } catch (err) {\n    console.error(err)\n  }\n}\n","import './style/index.scss'\nimport { executeRecaptcha } from './captcha'\nimport { handleSubmit } from './form'\n\nif (module['hot']) {\n  module['hot'].dispose(() => {})\n}\n\nexecuteRecaptcha('homepage_enter')\n\nwindow['handleSubmit'] = handleSubmit\n"]}